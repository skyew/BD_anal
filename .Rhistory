library(readxl)
Q_bd_methods_add_ARS_FEB18 <- read_excel("Q_bd_methods_add_ARS_FEB18.xlsx",
sheet = "Q_bd_methods_add_ARS_FEB18")
View(Q_bd_methods_add_ARS_FEB18)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
list.of.packages <- c("knitr", "tidyverse", "aqp", "readxl", "kableExtra", "purrr", "sharpshootR")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(knitr)
library(tidyverse)
library(purrr)
library(aqp)
library(readxl)
library(kableExtra)
library(sharpshootR)
bd <- read_excel("Q_bd_methods_add_ARS_FEB18.xlsx",  sheet = "Q_bd_methods_add_ARS_FEB18")
dsp <- read_excel("Q_bd_methods_add_ARS_FEB18.xlsx",  sheet = "DSP_Pedon IDs")
library(readxl)
DSP <- read_excel("Q_bd_methods_add_ARS_FEB18.xlsx",
sheet = "DSP_Pedon IDs")
View(DSP)
View(dsp)
#POX (AC) sample pool used to select samples for further analysis
BD_url <- 'https://nrcs.box.com/s/tomz9nl719v1e7r4y84d9rv7tn1vnnpz'
ifelse(!file.exists('update_bd_methods_add_ARS_Oct18.xlsx'), download.file(BD_url, destfile = paste0('update_bd_methods_add_ARS_Oct18.xlsx')), "File already downloaded")
#Full DSP data can be downloaded here:
#https://nrcs.box.com/s/tomz9nl719v1e7r4y84d9rv7tn1vnnpz
bd <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "BD_data")
#POX (AC) sample pool used to select samples for further analysis
BD_url <- 'https://nrcs.box.com/s/tomz9nl719v1e7r4y84d9rv7tn1vnnpz'
ifelse(!file.exists('update_bd_methods_add_ARS_Oct18.xlsx'), download.file(BD_url, destfile = paste0('update_bd_methods_add_ARS_Oct18.xlsx')), "File already downloaded")
bd <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "BD_data")
dsp <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "DSP_Pedon IDs")
BD <- bd %>% left_join(DSP %>% select(natural_key, Soil, Comparison, MGMT, DSP_PlotID, DSP_Pedon_ID, Crop, AgronFeature), by = "natural_key")
names(dsp)
#join relevant dsp data to bd
BD <- bd %>% left_join(dsp %>% select(natural_key, Soil, Comparison, MGMT, DSP_PlotID, DSP_Pedon_ID, Crop, AgronFeature), by = "natural_key")
#join relevant dsp data to bd
BD <- bd %>% left_join(dsp %>% select(natural_key, Soil, Comparison, MGMT, DSP_Plot ID, DSP_Pedon_ID, Crop, AgronFeature), by = "natural_key")
dsp <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "DSP_Pedon IDs")
#join relevant dsp data to bd
BD <- bd %>% left_join(dsp %>% select(natural_key, Soil, Comparison, MGMT, DSP_Plot ID, DSP_Pedon_ID, Crop, AgronFeature), by = "natural_key")
dsp <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "DSP_Pedon IDs")
#join relevant dsp data to bd
BD <- bd %>% left_join(dsp %>% select(natural_key, Soil, Comparison, MGMT, DSP_Plot_ID, DSP_Pedon_ID, Crop, AgronFeature), by = "natural_key")
dsp <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "DSP_Pedon IDs")
#join relevant dsp data to bd
BD <- bd %>% left_join(dsp %>% select(natural_key, Soil, Comparison, MGMT, DSP_Plot_ID, DSP_Pedon_ID, Crop, Agron_Feature), by = "natural_key")
View(BD)
write_csv(BD, 'BD.csv')
write_csv(BD, 'BD_compare.csv')
#############
BD <- read_csv <- ('BD_compare.csv')
BD %>% ggplot(aes(Clod, Core)) + geom_point()
BD <- bd %>% left_join(dsp %>% select(natural_key, Soil, Comparison, MGMT, DSP_Plot_ID, DSP_Pedon_ID, Crop, Agron_Feature), by = "natural_key")
BD %>% ggplot(aes(Clod, Core)) + geom_point()
?read_csv
write_csv(BD, 'BD_compare.csv', col_types = "cccccccnnccnnnnnccccccc")
problems(y)
problems(BD)
#############
BD <- read_csv('BD_compare.csv' , col_types = "cccccccnnccnnnnnccccccc")
BD %>% ggplot(aes(Clod, Core)) + geom_point()
?substr
BD %>% mutate(BD_diff = Clod - Core, CROP = ifelse(is.na(BD$Crop), BD$Crop, substr(BD$lay_field_label3, 1,4)))
BD %>% ggplot(aes(Clod, Core)) + geom_point(aes(Color = Crop))
BD %>% ggplot(aes(Clod, Core)) + geom_point(aes(fill = Crop))
BD %>% ggplot(aes(Clod, Core, fill = CROP)) + geom_point()
BD %>% mutate(BD_diff = Clod - Core, CROP = ifelse(is.na(BD$Crop), BD$Crop, substr(BD$lay_field_label3, 1,4)))
View(BD)
BD <- BD %>% ggplot(aes(Clod, Core, fill = CROP)) + geom_point()
?mutate
BD %>% mutate(BD_diff = Clod - Core)
BD$BD_diff = BD$Clod - BD$Core
BD$$CROP = ifelse(is.na(BD$Crop), BD$Crop, substr(BD$lay_field_label3, 1,4))
BD$CROP = ifelse(is.na(BD$Crop), BD$Crop, substr(BD$lay_field_label3, 1,4))
BD$CROP = ifelse(BD$Crop == "NA", BD$Crop, substr(BD$lay_field_label3, 1,4))
names(BD)
View(BD)
#############
BD <- read_csv('BD_compare.csv' , col_types = "cccccccnnccnnnnnccccccc")
BD$BD_diff = BD$Clod - BD$Core
BD$CROP = ifelse(BD$Crop == "NA", BD$Crop, substr(BD$lay_field_label3, 1,4))
BD %>% ggplot(aes(Clod, Core, fill = CROP)) + geom_point()
BD %>% ggplot(aes(x = Clod, y = Core, fill = CROP)) + geom_point()
BD %>% ggplot(aes(x = Clod, y = Core)) + geom_point()
View(BD)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
list.of.packages <- c("knitr", "tidyverse", "aqp", "readxl", "kableExtra", "purrr", "sharpshootR")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(knitr)
library(tidyverse)
library(purrr)
library(aqp)
library(readxl)
library(kableExtra)
library(sharpshootR)
#POX (AC) sample pool used to select samples for further analysis
BD_url <- 'https://nrcs.box.com/s/tomz9nl719v1e7r4y84d9rv7tn1vnnpz'
ifelse(!file.exists('update_bd_methods_add_ARS_Oct18.xlsx'), download.file(BD_url, destfile = paste0('update_bd_methods_add_ARS_Oct18.xlsx')), "File already downloaded")
#Full DSP data can be downloaded here:
#https://nrcs.box.com/s/tomz9nl719v1e7r4y84d9rv7tn1vnnpz
bd <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "BD_data")
dsp <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "DSP_Pedon IDs")
#join relevant dsp data to bd
BD <- bd %>% left_join(dsp %>% select(natural_key, DSP_Project, Soil, Comparison, MGMT, DSP_Plot_ID, DSP_Pedon_ID, Crop, Agron_Feature), by = "natural_key")
write_csv(BD, 'BD_compare.csv')
#############
BD <- read_csv('BD_compare.csv' , col_types = "cccccccnnccnnnnnccccccc")
#when there is not project substitute the first word in the submit project name (extract from 1 to the first blank)
BD$DSP_Project <- ifelse(!is.na(BD$DSP_Project), BD$DSP_Project,
substr(BD$submit_proj_name,1, regexpr(" ",BD$submit_proj_name)-1))
BD$BD_diff <- BD$Clod - BD$Core
#combine bulk density methods for ease of plotting
BD
BD$CROP <- ifelse(BD$Crop != "NA", BD$Crop, substr(BD$lay_field_label3, 1,4))
BD %>% ggplot(aes(x = Clod, y = Core)) + geom_point()
BD %>% ggplot(aes(x = Clod, y = Compliant_Cavity)) + geom_point()
BD %>% ggplot(aes(x = Clod, y = ars_bd)) + geom_point()
BD %>% ggplot(aes(x = Core, y = ars_bd)) + geom_point()
BD %>% ggplot(aes(x = Clod, y = ars_bd)) + geom_point() + scale_x_continuous(limits = c(0.5,2)) + scale_y_continuous(limits = c(0.5, 2))
BD %>% ggplot(aes(x = Core, y = ars_bd)) + geom_point()+ scale_x_continuous(limits = c(0.5,2)) + scale_y_continuous(limits = c(0.5, 2))
#function to add regression equations
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
fit1 <- lm(Clod ~ Core,BD)
ggplotRegression(fit1)
fit_ars <- lm(Clod ~ ars_bd, BD)
ggplotRegression(fit_ars)
grid.arrange(
BD %>% ggplot(aes(x = Clod, y = Core)) + geom_point(),
BD %>% ggplot(aes(x = Clod, y = Compliant_Cavity)) + geom_point(),
BD %>% ggplot(aes(x = Clod, y = ars_bd)) + geom_point() + scale_x_continuous(limits = c(0.5,2)) + scale_y_continuous(limits = c(0.5, 2)),
BD %>% ggplot(aes(x = Core, y = ars_bd)) + geom_point()+ scale_x_continuous(limits = c(0.5,2)) + scale_y_continuous(limits = c(0.5, 2)),
ncol = 2)
library(gridExtra)
grid.arrange(
BD %>% ggplot(aes(x = Clod, y = Core)) + geom_point(),
BD %>% ggplot(aes(x = Clod, y = Compliant_Cavity)) + geom_point(),
BD %>% ggplot(aes(x = Clod, y = ars_bd)) + geom_point() + scale_x_continuous(limits = c(0.5,2)) +
scale_y_continuous(limits = c(0.5, 2)),
BD %>% ggplot(aes(x = Core, y = ars_bd)) + geom_point()+ scale_x_continuous(limits = c(0.5,2)) +
scale_y_continuous(limits = c(0.5, 2)),
ncol = 2)
ggplotRegression(fit1)
ggplotRegression(fit_ars)
ggplotRegression(fit_cores)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
list.of.packages <- c("knitr", "tidyverse", "aqp", "readxl", "kableExtra", "purrr", "sharpshootR", "gridExtra")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(knitr)
library(tidyverse)
library(purrr)
library(aqp)
library(readxl)
library(kableExtra)
library(sharpshootR)
library(gridExtra)
fit_cores <- lm(Core ~ ars_bd, BD)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
list.of.packages <- c("knitr", "tidyverse", "aqp", "readxl", "kableExtra", "purrr", "sharpshootR", "gridExtra")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(knitr)
library(tidyverse)
library(purrr)
library(aqp)
library(readxl)
library(kableExtra)
library(sharpshootR)
library(gridExtra)
#POX (AC) sample pool used to select samples for further analysis
BD_url <- 'https://nrcs.box.com/s/tomz9nl719v1e7r4y84d9rv7tn1vnnpz'
ifelse(!file.exists('update_bd_methods_add_ARS_Oct18.xlsx'), download.file(BD_url, destfile = paste0('update_bd_methods_add_ARS_Oct18.xlsx')), "File already downloaded")
#Full DSP data can be downloaded here:
#https://nrcs.box.com/s/tomz9nl719v1e7r4y84d9rv7tn1vnnpz
bd <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "BD_data")
dsp <- read_excel("update_bd_methods_add_ARS_Oct18.xlsx",  sheet = "DSP_Pedon IDs")
#join relevant dsp data to bd
BD <- bd %>% left_join(dsp %>% select(natural_key, DSP_Project, Soil, Comparison, MGMT, DSP_Plot_ID, DSP_Pedon_ID, Crop, Agron_Feature), by = "natural_key")
write_csv(BD, 'BD_compare.csv')
#############
BD <- read_csv('BD_compare.csv' , col_types = "cccccccnnccnnnnnccccccc")
#when there is not project substitute the first word in the submit project name (extract from 1 to the first blank)
BD$DSP_Project <- ifelse(!is.na(BD$DSP_Project), BD$DSP_Project,
substr(BD$submit_proj_name,1, regexpr(" ",BD$submit_proj_name)-1))
BD$BD_diff <- BD$Clod - BD$Core
BD$CROP <- ifelse(BD$Crop != "NA", BD$Crop, substr(BD$lay_field_label3, 1,4))
#scatter plots of BD methods
grid.arrange(
BD %>% ggplot(aes(x = Clod, y = Core)) + geom_point(),
BD %>% ggplot(aes(x = Clod, y = Compliant_Cavity)) + geom_point(),
BD %>% ggplot(aes(x = Clod, y = ars_bd)) + geom_point() + scale_x_continuous(limits = c(0.5,2)) +
scale_y_continuous(limits = c(0.5, 2)),
BD %>% ggplot(aes(x = Core, y = ars_bd)) + geom_point()+ scale_x_continuous(limits = c(0.5,2)) +
scale_y_continuous(limits = c(0.5, 2)),
ncol = 2)
BD %>% ggplot(aes(x = Clod, y = BD_diff)) + geom_point()
BD %>% ggplot(aes(x = Clod, y = Core)) + geom_point(aes(color = DSP_Project))
BD %>% ggplot(aes(x = Clod, y = Core)) + geom_point(aes(color = DSP_Project)) + geom_smooth(method = "lm")
#function to add regression equations
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
fit1 <- lm(Clod ~ Core,BD)
ggplotRegression(fit1)
fit2 <- lm(Clod ~ Compliant_cavity, BD)
fit2 <- lm(Clod ~ Compliant_Cavity, BD)
ggplotRegression(fit2)
BD %>% ggplot(aes(x = Clod, y = Core)) + geom_point(aes(color = DSP_Project)) + geom_smooth(method = "lm")
BD %>% ggplot(aes(x = Clod, y = Core, color = DSP_Project)) + geom_point() + geom_smooth(method = "lm")
